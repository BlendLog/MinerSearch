//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MinerSearch.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MinerSearch.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        internal static string _accept_en {
            get {
                return ResourceManager.GetString("_accept_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Принять.
        /// </summary>
        internal static string _accept_ru {
            get {
                return ResourceManager.GetString("_accept_ru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Another copy of the application is already running. Display a help message?.
        /// </summary>
        internal static string _AppAlreadyRunning_EN {
            get {
                return ResourceManager.GetString("_AppAlreadyRunning_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Другая копия приложения уже запущена. Вывести сообщение справки?.
        /// </summary>
        internal static string _AppAlreadyRunning_RU {
            get {
                return ResourceManager.GetString("_AppAlreadyRunning_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect program startup.
        /// </summary>
        internal static string _ArchiveWarn_caption_en {
            get {
                return ResourceManager.GetString("_ArchiveWarn_caption_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Некорректный запуск программы.
        /// </summary>
        internal static string _ArchiveWarn_caption_ru {
            get {
                return ResourceManager.GetString("_ArchiveWarn_caption_ru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The program was launched from the archive! Extract the entire archive and restart again..
        /// </summary>
        internal static string _ArchiveWarn_en {
            get {
                return ResourceManager.GetString("_ArchiveWarn_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа была запущена из архива! Извлеките весь архив и повторите перезапуск..
        /// </summary>
        internal static string _ArchiveWarn_ru {
            get {
                return ResourceManager.GetString("_ArchiveWarn_ru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All done! You can close this app..
        /// </summary>
        internal static string _End_EN {
            get {
                return ResourceManager.GetString("_End_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Готово! Приложение можно закрыть..
        /// </summary>
        internal static string _End_RU {
            get {
                return ResourceManager.GetString("_End_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        internal static string _exit_en {
            get {
                return ResourceManager.GetString("_exit_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выйти.
        /// </summary>
        internal static string _exit_ru {
            get {
                return ResourceManager.GetString("_exit_ru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Startup params:
        ///
        ///--help                        This help message
        ///--no-logs                     Don&apos;t write logs in text file
        ///--no-scantime                 Scan processes only
        ///--no-runtime                  Static scan only (Malware dirs, files, registry keys, etc)
        ///--no-services                 Skip scan services
        ///--no-signature-scan           Skip scan files by signatures
        ///--no-rootkit-check            Skip checking rootkit present
        ///--depth=&lt;number&gt;              Where &lt;number&gt; specify the number for ma [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string _Help_EN {
            get {
                return ResourceManager.GetString("_Help_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Параметры запуска:
        ///
        ///--help                       Вызов этой справки
        ///--no-logs                    Не записывать лог в файл
        ///--no-scantime                Сканировать только процессы
        ///--no-runtime                 Не сканировать процессы (только каталоги, файлы, ключи реестра, и т.д.)
        ///--no-services                Пропустить сканирование служб
        ///--no-signature-scan          Пропустить сигнатурное сканирование файлов
        ///--no-rootkit-check           Не проверять присутствие руткита
        ///--depth=&lt;число&gt;              Г [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string _Help_RU {
            get {
                return ResourceManager.GetString("_Help_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Denial of responsibility
        ///
        ///This software provided &quot;as is&quot; and was created exclusively to search and remove malware that secretly uses computer resources for mining cryptocurrency. The author is not responsible for incidental, indirect or unintentional damage of any kind during the use of this software. You may use it at your own risk.
        ///
        ///FAQ:
        ///
        ///Question: Why does my antivirus indicate that the software contains a Trojan/virus?
        ///Answer: A third-party antivirus registers the very fact of interference in the [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string _License_EN {
            get {
                return ResourceManager.GetString("_License_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отказ от ответственности
        ///
        ///Данное программное обеспечение (Далее ПО) предоставляется &quot;как есть&quot; и создано исключительно для поиска и удаления вредоносного ПО, тайно использующее ресурсы компьютера для добычи (майнинга) криптовалюты. Автор не несет ответсвенности за причиненный случайный, косвенный или непреднамеренный ущерб любого рода в ходе использования данного ПО. Вы можете использовать его на свой страх и риск. 
        ///
        ///Часто задаваемые вопросы:
        ///
        ///Вопрос: Почему мой антивирус указывает, что ПО содержит тр [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string _License_RU {
            get {
                return ResourceManager.GetString("_License_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] rktest {
            get {
                object obj = ResourceManager.GetObject("rktest", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
